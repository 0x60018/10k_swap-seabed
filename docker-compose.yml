version: '3.8'

networks:
  # Specify the network for bridging
  l0k_swap-network:
    driver: bridge

volumes:
  db_data:

services:
  backend:
    build: ./backend
    command: yarn run start
    environment:
      PROMETHEUS_ALERTMANAGER: '{"api":"http://alertmanager:9093"}' # {"api":"http://alertmanager:9093"}
      DB_HOST: db
      REDIS_HOST: redis
    env_file:
      - .env
    volumes:
      - './backend/logs:/app/logs'
    #   - './backend:/app'
    ports:
      - '${APP_OPTIONS_PORT}:${APP_OPTIONS_PORT}'
    restart: always
    networks:
      - l0k_swap-network

  twitter-crawl:
    build: ./twitter-crawl
    command: ./twitter-crawl
    environment:
      DB_HOST: db
    env_file:
      - .env
    volumes:
      - './twitter-crawl/.cookies:/app/.cookies'
    restart: always
    networks:
      - l0k_swap-network

  db:
    image: postgres:15.2
    environment:
      PGHOST: '${DB_HOST}'
      PGPORT: ${DB_PORT}
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_NAME}'
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: always
    networks:
      - l0k_swap-network

  redis:
    image: redis:7.0.10
    command: redis-server --port ${REDIS_PORT} --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - './redis/data:/data'
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    restart: always
    networks:
      - l0k_swap-network

  nginx:
    image: nginx:alpine
    volumes:
      - './nginx.default.conf:/etc/nginx/conf.d/default.conf'
      - './nginx/log:/var/log/nginx'
      - './nginx.domain.crt:/etc/nginx/certs/domain.crt'
      - './nginx.domain.key:/etc/nginx/certs/domain.key'
    ports:
      - '80:80'
      - '443:443'
    restart: always
    networks:
      - l0k_swap-network
